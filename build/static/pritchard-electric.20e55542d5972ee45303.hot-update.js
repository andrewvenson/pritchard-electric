webpackHotUpdate("pritchard-electric",{

/***/ "./packages/mars-theme/src/components/home.js":
/*!****************************************************!*\
  !*** ./packages/mars-theme/src/components/home.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _emotion_styled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/styled */ \"./node_modules/@emotion/styled/dist/styled.browser.esm.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var react_spinners_PropagateLoader__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-spinners/PropagateLoader */ \"./node_modules/react-spinners/PropagateLoader.js\");\n/* harmony import */ var react_spinners_PropagateLoader__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_spinners_PropagateLoader__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _footer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./footer */ \"./packages/mars-theme/src/components/footer.js\");\n/* harmony import */ var _contactform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./contactform */ \"./packages/mars-theme/src/components/contactform.js\");\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./link */ \"./packages/mars-theme/src/components/link.js\");\n/* harmony import */ var _notfication_modal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./notfication-modal */ \"./packages/mars-theme/src/components/notfication-modal.js\");\nfunction ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var Home=(_ref)=>{var{state,actions,notificationmodal,showNotificationModal}=_ref;Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(()=>{actions.source.fetch(\"/home-post\",{force:true});var num1=Math.floor(Math.random()*10);var num2=Math.floor(Math.random()*10);var answer=num1+num2;setSecurityCheck(_objectSpread(_objectSpread({},securitycheck),{},{randomNum1:num1,randomNum2:num2,randomAnswer:answer}));showNotificationModal(!notificationmodal);},[]);var[loader,showLoader]=Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])(false);var[contactvals,setContactVals]=Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])({firstname:\"\",lastname:\"\",email:\"\",phone:\"\",message:\"\"});var[securitycheck,setSecurityCheck]=Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])({randomNum1:null,randomNum2:null,randomAnswer:null,clientAnswer:\"\",human:\"none\",firstname:\"none\",lastname:\"none\",email:\"none\",phone:\"none\",message:\"none\"});var submitContactForm=e=>{e.preventDefault();showLoader(true);setSecurityCheck(_objectSpread(_objectSpread({},securitycheck),{},{human:parseInt(securitycheck.clientAnswer)!==securitycheck.randomAnswer?\"block\":\"none\",firstname:contactvals.firstname==\"\"?\"block\":\"none\",lastname:contactvals.lastname==\"\"?\"block\":\"none\",email:contactvals.email==\"\"?\"block\":\"none\",phone:contactvals.phone==\"\"?\"block\":\"none\",message:contactvals.message==\"\"?\"block\":\"none\"}));if(contactvals.firstname!==\"\"&&contactvals.lastname!==\"\"&&contactvals.email!==\"\"&&contactvals.phone!==\"\"&&contactvals.message!==\"\"&&parseInt(securitycheck.clientAnswer)==securitycheck.randomAnswer){axios__WEBPACK_IMPORTED_MODULE_1___default.a.post(\"https://pritchard-email.herokuapp.com/post/sendemail\",{firstname:contactvals.firstname,lastname:contactvals.lastname,email:contactvals.email,phone:contactvals.phone,message:contactvals.message}).then(response=>{console.log(response);setContactVals(_objectSpread(_objectSpread({},contactvals),{},{firstname:\"\",lastname:\"\",email:\"\",phone:\"\",message:\"\"}));var num1=Math.floor(Math.random()*10);var num2=Math.floor(Math.random()*10);var answer=num1+num2;setSecurityCheck(_objectSpread(_objectSpread({},securitycheck),{},{human:\"none\",clientAnswer:\"\",randomAnswer:answer,randomNum1:num1,randomNum2:num2,firstname:\"none\",lastname:\"none\",email:\"none\",phone:\"none\",message:\"none\"}));showLoader(false);}).catch(err=>console.log(err));}else{showLoader(false);}};var data=state.source.get(\"/home-post/\");var[color,setColor]=Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useState\"])({one:[\"#1f40a3\",1,0.5],two:[\"#1f40a3\",1,0.5],three:[\"#1f40a3\",1,0.5],four:[\"#1f40a3\",1,0.5]});var serviceHover={WebkitTransition:\"all 1s ease-in-out\",MozTransition:\"all 1s ease-in-out\"};var width={width:\"25vw\",height:\"35vw\"};var mobileWidth={width:\"50vw\",height:\"65vw\"};var mobile560Width={width:\"100%\",height:\"110vw\"};var contactInput={border:\"1px solid lightgray\",height:\"30px\",width:\"100%\",backgroundColor:\"whitesmoke\",marginTop:\"4px\"};var contactSuggestions={border:\"1px solid lightgray\",width:\"100%\",backgroundColor:\"whitesmoke\",marginTop:\"4px\"};if(data.isPost){var globalStyles=/*#__PURE__*/Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"css\"])(\"body{overflow-y:\",notificationmodal?\"hidden\":\"visible\",\";};label:globalStyles;\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var category=state.source.post[data.id];var firstHeader=category.content.rendered;return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"main\",{style:{width:\"100%\",height:\"100vh\"}},notificationmodal&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_notfication_modal__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{notificationmodal:notificationmodal,showNotificationModal:showNotificationModal}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{className:\"desktopWorkspace\",style:{display:\"flex\",flexDirection:\"column\",textAlign:\"center\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"500px\",backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-belt.jpg')\",backgroundAttachment:\"fixed\",backgroundRepeat:\"no-repeat\",backgroundSize:\"cover\",backgroundPosition:\"center\",boxShadow:\"inset 0 8px 8px -6px rgba(0, 0, 0, 0.5)\",padding:\"0px 40px 40px 40px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{style:{color:\"white\",fontSize:70,margin:0,textShadow:\"3px 4px 5px black\",textTransform:\"uppercase\"},dangerouslySetInnerHTML:{__html:firstHeader}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"white\",textShadow:\"3px 4px 5px black\",fontSize:\"20px\"}},\"GET A SAFETY INSPECTION FROM A COMMERCIAL ELECTRICIAN IN AUSTIN,TX. PROUDLY SERVICING THE SURROUNDING AREAS.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{style:{padding:10,border:\"none\",backgroundColor:\"#f4bb36\",color:\"white\",fontSize:\"20px\",fontWeight:\"light\"},link:\"/contact\"},\"CONTACT US \\u203A\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{className:\"mobileWorkspace\",style:{display:\"none\",flexDirection:\"column\",textAlign:\"center\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"50vw\",background:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-belt.jpg')\",backgroundRepeat:\"no-repeat\",backgroundSize:\"cover\",backgroundPosition:\"center\",boxShadow:\"inset 0 8px 8px -6px rgba(0, 0, 0, 0.5)\",padding:\"0px 40px 40px 40px\",position:\"relative\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{width:\"100%\",height:\"100%\",top:0,left:0,zIndex:999,position:\"absolute\",backgroundColor:\"rgba(0, 0, 0, 0.5)\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"desktopWorkspaceText\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{style:{color:\"white\",fontSize:\"40px\",textShadow:\"3px 4px 5px black\",textTransform:\"uppercase\",zIndex:1000},dangerouslySetInnerHTML:{__html:firstHeader}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"white\",textShadow:\"3px 4px 5px black\",zIndex:1000}},\"GET A SAFETY INSPECTION FROM A COMMERCIAL ELECTRICIAN IN AUSTIN,TX. PROUDLY SERVICING THE SURROUNDING AREAS.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{style:{padding:10,border:\"none\",backgroundColor:\"#f4bb36\",color:\"white\",fontSize:\"18px\",fontWeight:\"light\",zIndex:1000},link:\"/contact\"},\"CONTACT US \\u203A\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"mobileWorkspaceText\",style:{display:\"none\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{style:{color:\"white\",fontSize:\"28px\",margin:0,textShadow:\"3px 4px 5px black\",textTransform:\"uppercase\",zIndex:1500},dangerouslySetInnerHTML:{__html:firstHeader}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"white\",textShadow:\"3px 4px 5px black\",fontSize:\"14px\",zIndex:1500}},\"GET A SAFETY INSPECTION FROM A COMMERCIAL ELECTRICIAN IN AUSTIN,TX. PROUDLY SERVICING THE SURROUNDING AREAS.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{style:{padding:10,border:\"none\",backgroundColor:\"#f4bb36\",color:\"white\",fontSize:\"15px\",fontWeight:\"light\",zIndex:1500},link:\"/contact\"},\"CONTACT US \\u203A\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{class:\"desktopView\",style:{width:\"100%\",display:\"flex\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},width),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{one:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{one:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.one[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),width),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.one[2],\")\"),zIndex:1,width:\"100%\",height:\"100%\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),width),{},{transform:\"scale(\".concat(color.one[1],\", \").concat(color.one[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-pole-work.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},width),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"ELECTRICAL PANEL UPGRADES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"MAKE FLICKERING LIGHTS AND TRIPPED CIRCUIT BREAKERS A THING OF THE PAST BY GETTING AN ELECTRICAL PANEL UPGRADE.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/electrical-panel-upgrades\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},width),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{two:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{two:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.two[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),width),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.two[2],\")\"),width:\"100%\",height:\"100%\",zIndex:1})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),width),{},{transform:\"scale(\".concat(color.two[1],\", \").concat(color.two[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-man.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},width),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"RESIDENTIAL ELECTRICAL SERVICES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"ASK AN ELECTRICIAN TO INSTALL NEW OUTLETS, BREAKERS AND APPLIANCES, OR PERFORM ELECTRICAL REPAIRS.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/residential-electrical-services\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},width),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{three:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{three:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.three[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),width),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.three[2],\")\"),width:\"100%\",height:\"100%\",zIndex:1})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),width),{},{transform:\"scale(\".concat(color.three[1],\", \").concat(color.three[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-light.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},width),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"COMMERCIAL ELECTRICAL SERVICES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"WE OFFER COMMERCIAL ELECTRICAL SAFETY INSPECTION SERVICES TO PROPERTY OWNERS OF THE AUSTIN, TX AREA.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/commercial-electrical-services\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},width),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{four:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{four:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.four[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),width),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.four[2],\")\"),width:\"100%\",height:\"100%\",zIndex:1})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),width),{},{transform:\"scale(\".concat(color.four[1],\", \").concat(color.four[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-crimp.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},width),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"LIGHTING SERVICES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"WE INSTALL, UPGRADE, RETROFIT AND REPLACE INTERIOR AND EXTERIOR RESIDENTIAL LIGHTING.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/lighting-services\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{class:\"mobileView\",style:{width:\"100%\",display:\"flex\",flexDirection:\"column\",display:\"none\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobileWidth),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{one:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{one:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.one[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobileWidth),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.one[2],\")\"),zIndex:1,width:\"100%\",height:\"100%\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobileWidth),{},{transform:\"scale(\".concat(color.one[1],\", \").concat(color.one[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-pole-work.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobileWidth),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"ELECTRICAL PANEL UPGRADES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"MAKE FLICKERING LIGHTS AND TRIPPED CIRCUIT BREAKERS A THING OF THE PAST BY GETTING AN ELECTRICAL PANEL UPGRADE.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/electrical-panel-upgrades\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobileWidth),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{two:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{two:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.two[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobileWidth),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.two[2],\")\"),width:\"100%\",height:\"100%\",zIndex:1})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobileWidth),{},{transform:\"scale(\".concat(color.two[1],\", \").concat(color.two[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-man.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobileWidth),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"RESIDENTIAL ELECTRICAL SERVICES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"ASK AN ELECTRICIAN TO INSTALL NEW OUTLETS, BREAKERS AND APPLIANCES, OR PERFORM ELECTRICAL REPAIRS.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/residential-electrical-services\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobileWidth),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{three:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{three:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.three[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobileWidth),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.three[2],\")\"),width:\"100%\",height:\"100%\",zIndex:1})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobileWidth),{},{transform:\"scale(\".concat(color.three[1],\", \").concat(color.three[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-light.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobileWidth),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"COMMERCIAL ELECTRICAL SERVICES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"WE OFFER COMMERCIAL ELECTRICAL SAFETY INSPECTION SERVICES TO PROPERTY OWNERS OF THE AUSTIN, TX AREA.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/commercial-electrical-services\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobileWidth),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{four:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{four:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.four[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobileWidth),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.four[2],\")\"),width:\"100%\",height:\"100%\",zIndex:1})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobileWidth),{},{transform:\"scale(\".concat(color.four[1],\", \").concat(color.four[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-crimp.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobileWidth),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"LIGHTING SERVICES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"WE INSTALL, UPGRADE, RETROFIT AND REPLACE INTERIOR AND EXTERIOR RESIDENTIAL LIGHTING.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/lighting-services\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}})))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{class:\"mobile560View\",style:{width:\"100%\",display:\"flex\",flexDirection:\"column\",display:\"none\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobile560Width),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{one:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{one:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.one[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobile560Width),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.one[2],\")\"),zIndex:1,width:\"100%\",height:\"100%\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobile560Width),{},{transform:\"scale(\".concat(color.one[1],\", \").concat(color.one[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-pole-work.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobile560Width),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"service\",style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"ELECTRICAL PANEL UPGRADES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"MAKE FLICKERING LIGHTS AND TRIPPED CIRCUIT BREAKERS A THING OF THE PAST BY GETTING AN ELECTRICAL PANEL UPGRADE.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/electrical-panel-upgrades\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobile560Width),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{two:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{two:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.two[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobile560Width),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.two[2],\")\"),width:\"100%\",height:\"100%\",zIndex:1})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobile560Width),{},{transform:\"scale(\".concat(color.two[1],\", \").concat(color.two[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-man.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobile560Width),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"service\",style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"RESIDENTIAL ELECTRICAL SERVICES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"ASK AN ELECTRICIAN TO INSTALL NEW OUTLETS, BREAKERS AND APPLIANCES, OR PERFORM ELECTRICAL REPAIRS.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/residential-electrical-services\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobile560Width),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{three:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{three:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.three[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobile560Width),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.three[2],\")\"),width:\"100%\",height:\"100%\",zIndex:1})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobile560Width),{},{transform:\"scale(\".concat(color.three[1],\", \").concat(color.three[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-light.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobile560Width),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"service\",style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"COMMERCIAL ELECTRICAL SERVICES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"WE OFFER COMMERCIAL ELECTRICAL SAFETY INSPECTION SERVICES TO PROPERTY OWNERS OF THE AUSTIN, TX AREA.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/commercial-electrical-services\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobile560Width),{},{position:\"relative\",overflow:\"hidden\"}),onMouseOver:()=>{setColor(_objectSpread(_objectSpread({},color),{},{four:[\"#f4bb36\",1.2,0.7]}));},onMouseLeave:()=>{setColor(_objectSpread(_objectSpread({},color),{},{four:[\"#1f40a3\",1,0.5]}));}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},serviceHover),{},{width:\"100%\",height:\"6px\",backgroundColor:\"\".concat(color.four[0])})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobile560Width),{},{backgroundColor:\"rgba(0, 0, 0, \".concat(color.four[2],\")\"),width:\"100%\",height:\"100%\",zIndex:1})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread(_objectSpread({},serviceHover),mobile560Width),{},{transform:\"scale(\".concat(color.four[1],\", \").concat(color.four[1],\")\"),width:\"100%\",height:\"100%\",backgroundRepeat:\"no-repeat\",backgroundPosition:\"center\",backgroundSize:\"cover\",position:\"absolute\",top:0,zIndex:-5,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-crimp.jpg')\"})}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:_objectSpread(_objectSpread({},mobile560Width),{},{zIndex:50,display:\"flex\",justifyContent:\"center\",alignItems:\"center\",color:\"white\",position:\"absolute\",top:0})},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"service\",style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",textAlign:\"center\",padding:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",null,\"LIGHTING SERVICES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid white\",width:\"100%\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"WE INSTALL, UPGRADE, RETROFIT AND REPLACE INTERIOR AND EXTERIOR RESIDENTIAL LIGHTING.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/lighting-services\",style:{display:\"inline-block\",width:\"100%\",height:\"100%\",position:\"absolute\",top:0,zIndex:999}}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{className:\"desktopWorkspace\",style:{display:\"flex\",flexDirection:\"column\",textAlign:\"center\",justifyContent:\"center\",alignItems:\"center\",padding:\"0px 50px 0px 50px\",minHeight:600,backgroundImage:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/sidwalk-lights.jpg')\",backgroundAttachment:\"fixed\",backgroundRepeat:\"no-repeat\",backgroundSize:\"cover\",backgroundPosition:\"center\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{style:{color:\"white\",fontSize:70,margin:0,textShadow:\"3px 4px 5px black\",textTransform:\"uppercase\"}},\"BRING YOUR LIGHT INTO THE 21ST CENTURY\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"white\",textShadow:\"3px 4px 5px black\",fontSize:\"20px\"}},\"OUR ELECTRICAL SERVICES INCLUDE LANDASCAPE LIGHTING UPGRADES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{style:{padding:10,border:\"none\",backgroundColor:\"#f4bb36\",color:\"white\",fontSize:20,fontWeight:\"light\"},link:\"/contact\"},\"CONTACT US \\u203A\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{className:\"mobileWorkspace\",style:{display:\"none\",flexDirection:\"column\",textAlign:\"center\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"50vw\",background:\"url('https://manage.pritchardelectric.net/wp-content/uploads/2021/03/sidwalk-lights.jpg'), rgba(0, 0, 0, 0.8)\",backgroundRepeat:\"no-repeat\",backgroundSize:\"cover\",backgroundPosition:\"center\",boxShadow:\"inset 0 8px 8px -6px rgba(0, 0, 0, 0.5)\",padding:\"0px 40px 40px 40px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"desktopWorkspaceText\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{style:{color:\"white\",fontSize:\"40px\",textShadow:\"3px 4px 5px black\",textTransform:\"uppercase\"}},\"BRING YOUR LIGHT INTO THE 21ST CENTURY\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"white\",textShadow:\"3px 4px 5px black\"}},\"OUR ELECTRICAL SERVICES INCLUDE LANDASCAPE LIGHTING UPGRADES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{style:{padding:10,border:\"none\",backgroundColor:\"#f4bb36\",color:\"white\",fontSize:\"18px\",fontWeight:\"light\"},link:\"/contact\"},\"CONTACT US \\u203A\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"mobileWorkspaceText\",style:{display:\"none\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{style:{color:\"white\",fontSize:\"28px\",margin:0,textShadow:\"3px 4px 5px black\",textTransform:\"uppercase\"}},\"BRING YOUR LIGHT INTO THE 21ST CENTURY\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"white\",textShadow:\"3px 4px 5px black\",fontSize:\"14px\"}},\"OUR ELECTRICAL SERVICES INCLUDE LANDASCAPE LIGHTING UPGRADES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{style:{padding:10,border:\"none\",backgroundColor:\"#f4bb36\",color:\"white\",fontSize:\"15px\",fontWeight:\"light\"},link:\"/contact\"},\"CONTACT US \\u203A\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{className:\"CallElectricianTime\",style:{backgroundColor:\"#1f40a3\",width:\"100%\",height:\"25vw\",display:\"flex\",color:\"white\",paddingTop:75,paddingBottom:75}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{height:\"100%\",width:\"49%\",paddingLeft:75,paddingRight:75}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{className:\"service\",style:{margin:0}},\"IT'S TIME TO CALL YOUR ELECTRICIAN IF YOU NOTICE THESE SIGNS\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"Avoid that nightmare completely. Call an electrician from Pritchard Electric right away if you notice:\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Discolored or malfunctioning outlets\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Lights that flicker or buzz\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Frequently tripped circuit breakers\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"We provide a wide range of\",\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"u\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/residential-electrical-services\"},\"residential electrical services\")),\" \",\"in Austin, Texas and the surrounding area.\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{height:\"100%\",border:\"2px solid white\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{height:\"100%\",width:\"49%\",paddingRight:75,paddingLeft:75}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"img\",{src:\"https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-testing.jpg\",alt:true,width:\"100%\"}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{className:\"MobileCallElectricianTime\",style:{backgroundColor:\"#1f40a3\",width:\"100%\",height:\"50vh\",display:\"none\",color:\"white\",paddingTop:25,paddingBottom:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{height:\"100%\",width:\"49%\",paddingLeft:25,paddingRight:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{className:\"service\",style:{margin:0}},\"IT'S TIME TO CALL YOUR ELECTRICIAN IF YOU NOTICE THESE SIGNS\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{fontSize:12}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"Avoid that nightmare completely. Call an electrician from Pritchard Electric right away if you notice:\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Discolored or malfunctioning outlets\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Lights that flicker or buzz\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Frequently tripped circuit breakers\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"We provide a wide range of\",\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"u\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/residential-electrical-services\"},\"residential electrical services\")),\" \",\"in Austin, Texas and the surrounding area.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{height:\"100%\",border:\"2px solid white\"}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{height:\"100%\",width:\"49%\",paddingRight:25,paddingLeft:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"img\",{src:\"https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-testing.jpg\",alt:true,width:\"100%\"}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{className:\"Mobile556CallElectricianTime\",style:{backgroundColor:\"#1f40a3\",width:\"100%\",display:\"none\",color:\"white\",flexDirection:\"column\",paddingTop:25,paddingBottom:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{// height: \"100%\",\n// width: \"100%\",\npaddingLeft:25,paddingRight:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{className:\"service\",style:{margin:0}},\"IT'S TIME TO CALL YOUR ELECTRICIAN IF YOU NOTICE THESE SIGNS\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{fontSize:12}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"Avoid that nightmare completely. Call an electrician from Pritchard Electric right away if you notice:\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Discolored or malfunctioning outlets\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Lights that flicker or buzz\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Frequently tripped circuit breakers\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"We provide a wide range of\",\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"u\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/residential-electrical-services\"},\"residential electrical services\")),\" \",\"in Austin, Texas and the surrounding area.\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{paddingRight:25,paddingLeft:25}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"img\",{src:\"https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-testing.jpg\",alt:true,width:\"100%\"}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{style:{backgroundColor:\"white\",padding:\"0px 45px 0px 45px\",display:\"flex\",justifyContent:\"center\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{textAlign:\"center\",paddingBottom:\"45px\",color:\"gray\",width:\"980px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{className:\"service\",style:{color:\"#1f40a3\"}},\"PUT A LICENSED ELECTRICIAN IN YOUR CONTACT LIST\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h3\",{className:\"goto\",style:{color:\"#1f40a3\"}},\"MAKE US YOUR SOURCE FOR ELECTRICAL SERVICES IN AUSTIN, TX\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"text\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"Need a few electrical repairs or upgrades done around the house? You can call Pritchard Electric, LLC for electrical issues of all kinds, including repairs\",\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/electrical-panel-upgrades\",style:{color:\"#f4bb36\",textDecoration:\"underline\"}},\"electrical panel upgrades\"),\",\",\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{link:\"/lighting-services\",style:{color:\"#f4bb36\",textDecoration:\"underline\"}},\"lighting services\"),\" \",\"and new wiring installations.\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"Trust your home or business to an electrician with over 10 years of experience.\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{className:\"BottomInfoContact\",style:{display:\"flex\",justifyContent:\"center\",backgroundColor:\"white\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{width:\"65%\",display:\"flex\",padding:\"10px\",justifyContent:\"flex-end\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{maxWidth:\"653px\",color:\"gray\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"img\",{style:{width:\"100%\",maxWidth:\"652px\",height:\"275px\"},src:\"https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-wall.jpg\",alt:\"Count on us for commercial electrical services\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{style:{color:\"#1f40a3\"}},\"COUNT ON US FOR COMMERCIAL ELECTRICAL SERVICES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"text\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"Do you own a business or commercial property in the Travis County area? Pritchard Electric provides commercial electrical services for:\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Office buildings\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Apartment complexes\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Retail shops and warehouses\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"Keep business running smoothly. Contact Austin, TX's premier commercial electrician today at 512-252-4699. We serve customers throughout the surrounding areas. Remember to ask for a free estimate on equipment upgrades or any other electrical service.\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{width:\"35%\",padding:\"10px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\",justifyContent:\"flex-start\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"form\",{style:{width:\"300px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"label\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{color:\"gray\",fontWeight:\"bold\",fontSize:\"15px\"}},\"Name \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{color:\"red\"}},\"*\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"input\",{type:\"text\",style:_objectSpread({},contactInput),value:contactvals.firstname,onChange:e=>setContactVals(_objectSpread(_objectSpread({},contactvals),{},{firstname:e.target.value}))}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{fontSize:12,color:\"gray\"}},\"First\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"red\",fontSize:15,margin:0,display:securitycheck.firstname}},\"Firstname is required\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"label\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"input\",{type:\"text\",style:_objectSpread({},contactInput),value:contactvals.lastname,onChange:e=>setContactVals(_objectSpread(_objectSpread({},contactvals),{},{lastname:e.target.value}))}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{fontSize:12,color:\"gray\"}},\"Last\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"red\",fontSize:15,margin:0,display:securitycheck.lastname}},\"Lastname is required\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"label\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{color:\"gray\",fontWeight:\"bold\",fontSize:\"15px\"}},\"Phone \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{color:\"red\"}},\"*\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"input\",{type:\"phone\",style:_objectSpread({},contactInput),value:contactvals.phone,onChange:e=>setContactVals(_objectSpread(_objectSpread({},contactvals),{},{phone:e.target.value}))}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"red\",fontSize:15,margin:0,display:securitycheck.phone}},\"(Format: 123-456-7890) Phone is required\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"label\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{color:\"gray\",fontWeight:\"bold\",fontSize:\"15px\"}},\"Email \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{color:\"red\"}},\"*\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"input\",{type:\"email\",style:_objectSpread({},contactInput),value:contactvals.email,onChange:e=>setContactVals(_objectSpread(_objectSpread({},contactvals),{},{email:e.target.value}))}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"red\",fontSize:15,margin:0,display:securitycheck.email}},\"Email is required\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"label\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{color:\"gray\",fontWeight:\"bold\",fontSize:\"15px\"}},\"Message/Suggestions\",\" \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{color:\"red\"}},\"*\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"textarea\",{type:\"text\",style:_objectSpread(_objectSpread({},contactSuggestions),{},{height:\"100px\",resize:\"none\"}),value:contactvals.message,onChange:e=>setContactVals(_objectSpread(_objectSpread({},contactvals),{},{message:e.target.value}))}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"red\",fontSize:15,margin:0,display:securitycheck.message}},\"Message/Suggestions is required\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"label\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{color:\"gray\",fontWeight:\"bold\",fontSize:\"15px\"}},\"Security Check \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{color:\"red\"}},\"*\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",null,securitycheck.randomNum1),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",null,\" + \"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"span\",{style:{marginRight:\"5px\"}},securitycheck.randomNum2,\" =\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"input\",{type:\"text\",style:_objectSpread(_objectSpread({},contactInput),{},{width:\"200px\"}),value:securitycheck.clientAnswer,onChange:e=>setSecurityCheck(_objectSpread(_objectSpread({},securitycheck),{},{clientAnswer:e.target.value}))}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{style:{color:\"red\",fontSize:15,margin:0,display:securitycheck.human}},\"We could not verify you are a human please try again\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"br\",null),loader?Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{display:\"flex\",justifyContent:\"center\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(react_spinners_PropagateLoader__WEBPACK_IMPORTED_MODULE_5___default.a,{color:\"#f4bb36\"})):Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"button\",{style:{padding:10,border:\"none\",backgroundColor:\"#f4bb36\",color:\"white\",width:\"100%\",fontSize:20,fontWeight:\"light\"},onClick:e=>submitContactForm(e)},\"SUBMIT\")))))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{className:\"MobileBottomInfoContact\",style:{display:\"none\",backgroundColor:\"white\",padding:\"15px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{style:{color:\"gray\",fontSize:12}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"img\",{style:{width:\"100%\",height:\"275px\"},src:\"https://manage.pritchardelectric.net/wp-content/uploads/2021/03/electrical-wall.jpg\",alt:\"Count on us for commercial electrical services\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"h1\",{style:{color:\"#1f40a3\"}},\"COUNT ON US FOR COMMERCIAL ELECTRICAL SERVICES\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"Do you own a business or commercial property in the Travis County area? Pritchard Electric provides commercial electrical services for:\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"ul\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Office buildings\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Apartment complexes\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"li\",null,\"Retail shops and warehouses\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",null,\"Keep business running smoothly. Contact Austin, TX's premier commercial electrician today at 512-252-4699. We serve customers throughout the surrounding areas. Remember to ask for a free estimate on equipment upgrades or any other electrical service.\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_contactform__WEBPACK_IMPORTED_MODULE_7__[\"default\"],null)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_footer__WEBPACK_IMPORTED_MODULE_6__[\"default\"],null));}return null;};// Connect the Item to gain access to `state` as a prop\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(Home));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/home.js\n");

/***/ })

})