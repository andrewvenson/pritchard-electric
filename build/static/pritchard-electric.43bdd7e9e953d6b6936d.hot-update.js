webpackHotUpdate("pritchard-electric",{

/***/ "./packages/mars-theme/src/components/header.js":
/*!******************************************************!*\
  !*** ./packages/mars-theme/src/components/header.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _static_images_bluecall_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../static/images/bluecall.png */ \"./packages/mars-theme/src/static/images/bluecall.png\");\n/* harmony import */ var _static_images_bluecall_png__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_static_images_bluecall_png__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _static_images_mail_png__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../static/images/mail.png */ \"./packages/mars-theme/src/static/images/mail.png\");\n/* harmony import */ var _static_images_mail_png__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_static_images_mail_png__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _static_images_facebook_circular_logo_png__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../static/images/facebook-circular-logo.png */ \"./packages/mars-theme/src/static/images/facebook-circular-logo.png\");\n/* harmony import */ var _static_images_facebook_circular_logo_png__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_static_images_facebook_circular_logo_png__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _static_images_fax_png__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../static/images/fax.png */ \"./packages/mars-theme/src/static/images/fax.png\");\n/* harmony import */ var _static_images_fax_png__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_static_images_fax_png__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./link */ \"./packages/mars-theme/src/components/link.js\");\n/* harmony import */ var _menu__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./menu */ \"./packages/mars-theme/src/components/menu.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var Header=(_ref)=>{var{state}=_ref;var Container2=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1afngyw0\",label:\"Container2\"})( false?undefined:{name:\"gskex7\",styles:\"width:1000px;max-width:100%;box-sizing:border-box;display:flex;padding:15px 10px 0px 10px;flex-direction:column;justify-content:space-around;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(Container,{className:\"desktopHeader\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"tel:+1-512-252-4699\",title:\"(512) 252-4699\",style:{color:\"#1f40a3\",display:\"flex\",fontWeight:\"500\",fontSize:\"14px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"span\",{style:{marginRight:\"5px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{src:_static_images_bluecall_png__WEBPACK_IMPORTED_MODULE_3___default.a,width:\"18px\",height:\"18px\"})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"span\",null,\"(512) 252-4699\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"div\",{style:{display:\"flex\",justifyContent:\"center\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"http://www.facebook.com/pages/category/Electrician/Pritchard-Electric-139403462895904/\",title:\"Facebook\",target:\"_blank\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{style:{marginRight:\"8px\"},width:\"20px\",height:\"20px\",src:_static_images_facebook_circular_logo_png__WEBPACK_IMPORTED_MODULE_5___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"mailto:?subject=Check out Pritchard Electric%2C LLC&body=I thought you%27d be interested in this site%3A%0Ahttp%3A%2F%2Fpritchardelectric.net%2F\",title:\"Send to a Friend\",target:\"_blank\",class:\"email_icon\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{style:{marginRight:\"8px\"},width:\"20px\",height:\"20px\",src:_static_images_mail_png__WEBPACK_IMPORTED_MODULE_4___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"javascript:window.print()\",title:\"Print This Page\",class:\"print_icon\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{width:\"20px\",height:\"20px\",src:_static_images_fax_png__WEBPACK_IMPORTED_MODULE_6___default.a})))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(StyledLink,{link:\"/\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(Title,{style:{justifyContent:\"center\",display:\"flex\",margin:\"0px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{src:\"http://pritchardelectric.net/files/2019/01/394765_139812716188312_1908785223_n.png\",style:{width:\"325px\",height:\"125px\"}}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_menu__WEBPACK_IMPORTED_MODULE_8__[\"default\"],null)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(Container2,{className:\"mobileHeader\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"tel:+1-512-252-4699\",title:\"(512) 252-4699\",style:{color:\"#1f40a3\",display:\"flex\",fontWeight:\"500\",fontSize:\"14px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"span\",{style:{marginRight:\"5px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{src:_static_images_bluecall_png__WEBPACK_IMPORTED_MODULE_3___default.a,width:\"18px\",height:\"18px\"})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"span\",null,\"(512) 252-4699\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(StyledLink,{link:\"/\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(Title,{style:{justifyContent:\"center\",display:\"flex\",margin:\"0px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{src:\"http://pritchardelectric.net/files/2019/01/394765_139812716188312_1908785223_n.png\",style:{width:\"77.41px\",height:\"41.98px\"}}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"div\",{style:{display:\"flex\",justifyContent:\"center\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"http://www.facebook.com/pages/category/Electrician/Pritchard-Electric-139403462895904/\",title:\"Facebook\",target:\"_blank\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{style:{marginRight:\"8px\"},width:\"20px\",height:\"20px\",src:_static_images_facebook_circular_logo_png__WEBPACK_IMPORTED_MODULE_5___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"mailto:?subject=Check out Pritchard Electric%2C LLC&body=I thought you%27d be interested in this site%3A%0Ahttp%3A%2F%2Fpritchardelectric.net%2F\",title:\"Send to a Friend\",target:\"_blank\",class:\"email_icon\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{style:{marginRight:\"8px\"},width:\"20px\",height:\"20px\",src:_static_images_mail_png__WEBPACK_IMPORTED_MODULE_4___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"a\",{href:\"javascript:window.print()\",title:\"Print This Page\",class:\"print_icon\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(\"img\",{width:\"20px\",height:\"20px\",src:_static_images_fax_png__WEBPACK_IMPORTED_MODULE_6___default.a}))))));};// Connect the Header component to get access to the `state` in it's `props`\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Header));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1afngyw1\",label:\"Container\"})( false?undefined:{name:\"gskex7\",styles:\"width:1000px;max-width:100%;box-sizing:border-box;display:flex;padding:15px 10px 0px 10px;flex-direction:column;justify-content:space-around;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Title=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"h2\",{target:\"e1afngyw2\",label:\"Title\"})( false?undefined:{name:\"1ou2v44\",styles:\"margin:0;margin-bottom:16px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Description=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"h4\",{target:\"e1afngyw3\",label:\"Description\"})( false?undefined:{name:\"1uk1gs8\",styles:\"margin:0;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var StyledLink=/*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_link__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{target:\"e1afngyw4\",label:\"StyledLink\"})( false?undefined:{name:\"ytumd6\",styles:\"text-decoration:none;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/header.js\n");

/***/ })

})