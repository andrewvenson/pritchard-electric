webpackHotUpdate("pritchard-electric",{

/***/ "./packages/mars-theme/src/components/index.js":
/*!*****************************************************!*\
  !*** ./packages/mars-theme/src/components/index.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./header */ \"./packages/mars-theme/src/components/header.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./list */ \"./packages/mars-theme/src/components/list/index.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./post */ \"./packages/mars-theme/src/components/post.js\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./loading */ \"./packages/mars-theme/src/components/loading.js\");\n/* harmony import */ var _home__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./home */ \"./packages/mars-theme/src/components/home.js\");\n/* harmony import */ var _contact__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./contact */ \"./packages/mars-theme/src/components/contact.js\");\n/* harmony import */ var _faq__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./faq */ \"./packages/mars-theme/src/components/faq.js\");\n/* harmony import */ var _gallery__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./gallery */ \"./packages/mars-theme/src/components/gallery.js\");\n/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./title */ \"./packages/mars-theme/src/components/title.js\");\n/* harmony import */ var _page_error__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./page-error */ \"./packages/mars-theme/src/components/page-error.js\");\n/* harmony import */ var _nav__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./nav */ \"./packages/mars-theme/src/components/nav.js\");\n/* harmony import */ var _sidenav__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./sidenav */ \"./packages/mars-theme/src/components/sidenav.js\");\n/* harmony import */ var _mobilenav__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./mobilenav */ \"./packages/mars-theme/src/components/mobilenav.js\");\n/* harmony import */ var _services_electrical_panel_upgrades__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./services/electrical-panel-upgrades */ \"./packages/mars-theme/src/components/services/electrical-panel-upgrades.js\");\n/* harmony import */ var _services_commercial_electrical_services__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./services/commercial-electrical-services */ \"./packages/mars-theme/src/components/services/commercial-electrical-services.js\");\n/* harmony import */ var _services_lighting_services__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./services/lighting-services */ \"./packages/mars-theme/src/components/services/lighting-services.js\");\n/* harmony import */ var _services_residential_electrical_services__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./services/residential-electrical-services */ \"./packages/mars-theme/src/components/services/residential-electrical-services.js\");\n/* harmony import */ var _static_images_mail_png__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../static/images/mail.png */ \"./packages/mars-theme/src/static/images/mail.png\");\n/* harmony import */ var _static_images_mail_png__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_static_images_mail_png__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var _static_images_facebook_circular_logo_png__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../static/images/facebook-circular-logo.png */ \"./packages/mars-theme/src/static/images/facebook-circular-logo.png\");\n/* harmony import */ var _static_images_facebook_circular_logo_png__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_static_images_facebook_circular_logo_png__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var _static_images_fax_png__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../static/images/fax.png */ \"./packages/mars-theme/src/static/images/fax.png\");\n/* harmony import */ var _static_images_fax_png__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_static_images_fax_png__WEBPACK_IMPORTED_MODULE_24__);\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\r\n * Theme is the root React component of our theme. The one we will export\r\n * in roots.\r\n */var Theme=(_ref)=>{var{state}=_ref;// Get information about the current URL.\nvar data=state.source.get(state.router.link);var[sidenav,setSideNav]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[socialmodal,showSocialModal]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var[notificationmodal,showNotificationModal]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var globalStyles=/*#__PURE__*/Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"body{margin:0;font-family:\\\"Roboto Condensed\\\",sans-serif;overflow-y:\",sidenav||socialmodal||notificationmodal?\"hidden\":\"scroll\",\";}a,a:visited{color:inherit;text-decoration:none;}section > h1 > p{margin:0;}@media screen and (max-width:1086px){.desktopView{display:none !important;}}@media screen and (max-width:1086px){.mobileView{display:block !important;}}@media screen and (max-width:560px){.mobile560View{display:block !important;}.mobileView{display:none !important;}}@media screen and (max-width:789px){.BottomInfoContact{display:none !important;}.desktopNav{display:none !important;}.desktopSocials{display:none !important;}.desktopTelephone{display:none !important;}.desktopWorkspaceText{display:none !important;}}@media screen and (max-width:789px){.MobileBottomInfoContact{display:block !important;}.mobileNav{display:flex !important;}.mobileSocials{display:block !important;}.mobileMenu{display:block !important;}.mobileWorkspaceText{display:block !important;}}@media screen and (max-width:1075px){.CallElectricianTime{display:none !important;}.desktopWorkspace{display:none !important;}}@media screen and (max-width:1075px){.MobileCallElectricianTime{display:flex !important;}.mobileWorkspace{display:flex !important;}}@media screen and (max-width:777px){.servicesDesktopWidth{display:none !important;}}@media screen and (max-width:777px){.services1060Width{display:block !important;}}@media screen and (max-width:1075px){.MobileCallElectricianTime{display:flex !important;}.mobileWorkspace{display:flex !important;}}@media screen and (max-width:556px){.CallElectricianTime{display:none !important;}.MobileCallElectricianTime{display:none !important;}}@media screen and (max-width:556px){.Mobile556CallElectricianTime{display:flex !important;}}@media screen and (max-width:545px){.desktopFooter{display:none !important;}.desktopHeader{display:none !important;}.service h1{font-size:18px !important;}.service{font-size:18px !important;}.goto{font-size:13px !important;}.text p{font-size:12px !important;}.notificationButton{font-size:12px !important;padding:5px !important;}.notificationLogo{width:200px !important;height:75px !important;}.notificationText{font-size:12px !important;}}@media screen and (max-width:545px){.mobileFooter{display:block !important;}.mobileHeader{display:flex !important;}}.serviceTab a:hover{color:#f4bb36;}.sideNav div a:hover{color:#f4bb36;};label:globalStyles;\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_title__WEBPACK_IMPORTED_MODULE_13__[\"default\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(frontity__WEBPACK_IMPORTED_MODULE_3__[\"Head\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"meta\",{name:\"description\",content:state.frontity.description}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"html\",{lang:\"en\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"link\",{rel:\"preconnect\",href:\"https://fonts.gstatic.com\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"link\",{href:\"https://fonts.googleapis.com/css2?family=Roboto+Condensed&display=swap\",rel:\"stylesheet\"})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_sidenav__WEBPACK_IMPORTED_MODULE_16__[\"default\"],{sidenav:sidenav,setSideNav:setSideNav}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"Global\"],{styles:globalStyles}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(HeadContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_header__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{sidenav:sidenav,setSideNav:setSideNav,socialmodal:socialmodal,showSocialModal:showSocialModal})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\",{style:{backgroundColor:\"#1f40a3\",display:\"flex\",justifyContent:\"center\",padding:\"15px\"},className:\"desktopNav\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_nav__WEBPACK_IMPORTED_MODULE_15__[\"default\"],null)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_mobilenav__WEBPACK_IMPORTED_MODULE_17__[\"default\"],null),socialmodal&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\",{onClick:()=>showSocialModal(!socialmodal),style:{backgroundColor:\"rgba(0, 0, 0, 0.8)\",width:\"100%\",height:\"150vh\",position:\"absolute\",zIndex:\"9999999\",top:0}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\",{style:{width:\"100%\",display:\"flex\",justifyContent:\"center\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\",{style:{backgroundColor:\"white\",position:\"absolute\",top:\"25px\",borderRadius:\"5px\",width:\"90vw\",height:\"400px\",zIndex:\"99999999999\",borderBottom:\"5px solid #1f40a3\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\",{style:{backgroundColor:\"#1f40a3\",height:\"45px\",borderTopRightRadius:\"5px\",borderTopLeftRadius:\"5px\",display:\"flex\",justifyContent:\"space-between\",padding:\"10px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"h2\",{style:{color:\"white\",margin:\"0px\"}},\"Follow Us\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"h2\",{onClick:()=>showSocialModal(!socialmodal),style:{color:\"white\",margin:\"0px\",cursor:\"pointer\"}},\"X\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid lightgray\",padding:\"5px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"strong\",{style:{color:\"#1f40a3\",fontSize:\"14px\",display:\"flex\",justifyContent:\"flex-start\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"a\",{href:\"https://www.facebook.com/pages/category/Electrician/Pritchard-Electric-139403462895904/\",title:\"Facebook\",target:\"_blank\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"img\",{style:{marginRight:\"8px\"},width:\"20px\",height:\"20px\",src:_static_images_facebook_circular_logo_png__WEBPACK_IMPORTED_MODULE_23___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"a\",{href:\"https://www.facebook.com/pages/category/Electrician/Pritchard-Electric-139403462895904/\",title:\"Facebook\",target:\"_blank\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"span\",null,\"Facebook\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid lightgray\",padding:\"5px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"strong\",{style:{color:\"#1f40a3\",fontSize:\"14px\",display:\"flex\",justifyContent:\"flex-start\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"a\",{href:\"mailto:?subject=Check out Pritchard Electric%2C LLC&body=I thought you%27d be interested in this site%3A%0Ahttp%3A%2F%2Fpritchardelectric.net%2F\",title:\"Send to a Friend\",target:\"_blank\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"img\",{style:{marginRight:\"8px\"},width:\"20px\",height:\"20px\",src:_static_images_mail_png__WEBPACK_IMPORTED_MODULE_22___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"a\",{href:\"mailto:?subject=Check out Pritchard Electric%2C LLC&body=I thought you%27d be interested in this site%3A%0Ahttp%3A%2F%2Fpritchardelectric.net%2F\",title:\"Send to a Friend\",target:\"_blank\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"span\",null,\"Send to a Friend\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\",{style:{borderBottom:\"1px solid lightgray\",padding:\"5px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"strong\",{style:{color:\"#1f40a3\",fontSize:\"14px\",display:\"flex\",justifyContent:\"flex-start\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"a\",{onClick:()=>window.print(),style:{cursor:\"pointer\"},title:\"Print This Page\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"img\",{width:\"20px\",height:\"20px\",style:{marginRight:\"8px\"},src:_static_images_fax_png__WEBPACK_IMPORTED_MODULE_24___default.a})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"a\",{onClick:()=>window.print(),style:{cursor:\"pointer\"},title:\"Print This Page\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"span\",null,\"Print This Page\"))))))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(Main,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_frontity_components_switch__WEBPACK_IMPORTED_MODULE_4__[\"default\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_loading__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{when:data.isFetching}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_list__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{when:data.isArchive}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_post__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{when:data.isPostType}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_page_error__WEBPACK_IMPORTED_MODULE_14__[\"default\"],{when:data.isError}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_home__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{when:data.isHome,showNotificationModal:showNotificationModal,notificationmodal:notificationmodal}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_contact__WEBPACK_IMPORTED_MODULE_10__[\"default\"],{when:data.isContact}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_faq__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{when:data.isFaq}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_gallery__WEBPACK_IMPORTED_MODULE_12__[\"default\"],{when:data.isGallery}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_services_residential_electrical_services__WEBPACK_IMPORTED_MODULE_21__[\"default\"],{when:data.isResidential}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_services_commercial_electrical_services__WEBPACK_IMPORTED_MODULE_19__[\"default\"],{when:data.isCommercial}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_services_lighting_services__WEBPACK_IMPORTED_MODULE_20__[\"default\"],{when:data.isLighting}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_services_electrical_panel_upgrades__WEBPACK_IMPORTED_MODULE_18__[\"default\"],{when:data.isElectrical}))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(Theme));var HeadContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1nzqhd60\",label:\"HeadContainer\"})( false?undefined:{name:\"nu7ygn\",styles:\"display:flex;align-items:center;flex-direction:column;background-color:#fff;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Main=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1nzqhd61\",label:\"Main\"})( false?undefined:{name:\"1m9csha\",styles:\"display:flex;justify-content:center;background-image:linear-gradient( 180deg,rgba(66,174,228,0.1),rgba(66,174,228,0) );\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/index.js\n");

/***/ })

})