webpackHotUpdate("pritchard-electric",{

/***/ "./packages/mars-theme/src/components/index.js":
/*!*****************************************************!*\
  !*** ./packages/mars-theme/src/components/index.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _static_images_call_png__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../static/images/call.png */ \"./packages/mars-theme/src/static/images/call.png\");\n/* harmony import */ var _static_images_call_png__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_static_images_call_png__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./header */ \"./packages/mars-theme/src/components/header.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./list */ \"./packages/mars-theme/src/components/list/index.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./post */ \"./packages/mars-theme/src/components/post.js\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./loading */ \"./packages/mars-theme/src/components/loading.js\");\n/* harmony import */ var _home__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./home */ \"./packages/mars-theme/src/components/home.js\");\n/* harmony import */ var _contact__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./contact */ \"./packages/mars-theme/src/components/contact.js\");\n/* harmony import */ var _faq__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./faq */ \"./packages/mars-theme/src/components/faq.js\");\n/* harmony import */ var _gallery__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./gallery */ \"./packages/mars-theme/src/components/gallery.js\");\n/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./title */ \"./packages/mars-theme/src/components/title.js\");\n/* harmony import */ var _page_error__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./page-error */ \"./packages/mars-theme/src/components/page-error.js\");\n/* harmony import */ var _nav__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./nav */ \"./packages/mars-theme/src/components/nav.js\");\n/* harmony import */ var _sidenav__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./sidenav */ \"./packages/mars-theme/src/components/sidenav.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * Theme is the root React component of our theme. The one we will export\n * in roots.\n */var Theme=(_ref)=>{var{state}=_ref;// Get information about the current URL.\nvar data=state.source.get(state.router.link);var[sidenav,setSideNav]=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useState\"])(false);var globalStyles=/*#__PURE__*/Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"css\"])(\"body{margin:0;font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Droid Sans\\\",\\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif;overflow-y:\",sidenav?\"hidden\":\"visible\",\";}a,a:visited{color:inherit;text-decoration:none;}section > h1 > p{margin:0;}@media screen and (max-width:1086px){.desktopView{display:none !important;}}@media screen and (max-width:1086px){.mobileView{display:block !important;}}@media screen and (max-width:560px){.mobile560View{display:block !important;}.mobileView{display:none !important;}}@media screen and (max-width:789px){.BottomInfoContact{display:none !important;}.desktopNav{display:none !important;}.desktopSocials{display:none !important;}.desktopTelephone{display:none !important;}.desktopWorkspaceText{display:none !important;}}@media screen and (max-width:789px){.MobileBottomInfoContact{display:block !important;}.mobileNav{display:flex !important;}.mobileSocials{display:block !important;}.mobileMenu{display:block !important;}.mobileWorkspaceText{display:block !important;}}@media screen and (max-width:1075px){.CallElectricianTime{display:none !important;}.desktopWorkspace{display:none !important;}}@media screen and (max-width:1075px){.MobileCallElectricianTime{display:flex !important;}.mobileWorkspace{display:flex !important;}}@media screen and (max-width:556px){.CallElectricianTime{display:none !important;}.MobileCallElectricianTime{display:none !important;}}@media screen and (max-width:556px){.Mobile556CallElectricianTime{display:flex !important;}}@media screen and (max-width:545px){.desktopFooter{display:none !important;}.desktopHeader{display:none !important;}}@media screen and (max-width:545px){.mobileFooter{display:block !important;}.mobileHeader{display:flex !important;}};label:globalStyles;\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_title__WEBPACK_IMPORTED_MODULE_14__[\"default\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(frontity__WEBPACK_IMPORTED_MODULE_3__[\"Head\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"meta\",{name:\"description\",content:state.frontity.description}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"html\",{lang:\"en\"})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_sidenav__WEBPACK_IMPORTED_MODULE_17__[\"default\"],{sidenav:sidenav,setSideNav:setSideNav}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"Global\"],{styles:globalStyles}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(HeadContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_header__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{sidenav:sidenav,setSideNav:setSideNav})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\",{style:{backgroundColor:\"#1f40a3\",display:\"flex\",justifyContent:\"center\",padding:\"15px\"},className:\"desktopNav\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_nav__WEBPACK_IMPORTED_MODULE_16__[\"default\"],null)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"div\",{style:{backgroundColor:\"white\",display:\"none\",justifyContent:\"center\",padding:\"15px\",boxShadow:\"inset 0 8px 8px -6px lightgray\",borderBottom:\"1px solid lightgray\",color:\"#f4bb36\"},className:\"mobileNav\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"a\",{href:\"tel:+1-512-252-4699\",title:\"(512) 252-4699\",style:{color:\"#f4bb36\",display:\"flex\",fontWeight:\"500\",fontSize:\"14px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"span\",{style:{marginRight:\"5px\"}},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"img\",{src:_static_images_call_png__WEBPACK_IMPORTED_MODULE_4___default.a,width:\"18px\",height:\"18px\"})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(\"span\",null,\"(512) 252-4699\"))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(Main,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_frontity_components_switch__WEBPACK_IMPORTED_MODULE_5__[\"default\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_loading__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{when:data.isFetching}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_list__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{when:data.isArchive}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_post__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{when:data.isPostType}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_page_error__WEBPACK_IMPORTED_MODULE_15__[\"default\"],{when:data.isError}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_home__WEBPACK_IMPORTED_MODULE_10__[\"default\"],{when:data.isHome}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_contact__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{when:data.isContact}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_faq__WEBPACK_IMPORTED_MODULE_12__[\"default\"],{when:data.isFaq}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_2__[\"jsx\"])(_gallery__WEBPACK_IMPORTED_MODULE_13__[\"default\"],{when:data.isGallery}))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(Theme));var HeadContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1nzqhd60\",label:\"HeadContainer\"})( false?undefined:{name:\"nu7ygn\",styles:\"display:flex;align-items:center;flex-direction:column;background-color:#fff;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Main=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1nzqhd61\",label:\"Main\"})( false?undefined:{name:\"1m9csha\",styles:\"display:flex;justify-content:center;background-image:linear-gradient( 180deg,rgba(66,174,228,0.1),rgba(66,174,228,0) );\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/index.js\n");

/***/ })

})